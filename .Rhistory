monthDAP2  <- NULL
dayDAP2    <- NULL
for (ii in 1:(length(eltrcensus$plot))) {  #length(eltrcensus$plot) is equivalent to nrow(eltrcensus)
yeartmp  = NA
monthtmp = NA
daytmp   = NA
# cat("At row",i,"=",eltrcensus$plot[i]) this is to print the number of row and the value in that row
if (as.character(eltrcensus$plot[ii]) == "SPD-01") {
yeartmp  = 2008
monthtmp = 9
daytmp   = 7
}
if (as.character(eltrcensus$plot[ii]) == "SPD-02") {
yeartmp  = 2008
monthtmp = 9
daytmp   = 12
}
if (as.character(eltrcensus$plot[ii]) == "TRU-03") {
yeartmp  = 2007
monthtmp = 5
daytmp   = 28
}
if (as.character(eltrcensus$plot[ii]) == "TRU-04") {
yeartmp  = 2007
monthtmp = 6
daytmp   = 8
}
if (as.character(eltrcensus$plot[ii]) == "TRU-07") {
yeartmp  = 2007
monthtmp = 6
daytmp   = 27
}
if (as.character(eltrcensus$plot[ii]) == "TRU-08") {
yeartmp  = 2007
monthtmp = 7
daytmp   = 2
}
if (as.character(eltrcensus$plot[ii]) == "WAY-01") {
yeartmp  = 2007
monthtmp = 7
daytmp   = 6
}
yearDAP2  = c(yearDAP2,yeartmp)
monthDAP2 = c(monthDAP2,monthtmp)
dayDAP2   = c(dayDAP2,daytmp)
datesDAP2 = data.frame(yearDAP2, monthDAP2, dayDAP2)
datesDAP2 = data.frame(datesDAP2[1:7352,], eltrcensus$plot)
colnames(datesDAP2) <- c("year", "month", "day", "plot")
}
# 3rd census
yearDAP3   <- NULL   # same as yearDAP2 = c()
monthDAP3  <- NULL
dayDAP3    <- NULL
for (ii in 1:(length(eltrcensus$plot))) {  #length(eltrcensus$plot) is equivalent to nrow(eltrcensus)
yeartmp  = NA
monthtmp = NA
daytmp   = NA
# cat("At row",i,"=",eltrcensus$plot[i]) this is to print the number of row and the value in that row
if (as.character(eltrcensus$plot[ii]) == "SPD-01") {
yeartmp  = 2011
monthtmp = 10
daytmp   = 23
}
if (as.character(eltrcensus$plot[ii]) == "SPD-02") {
yeartmp  = 2011
monthtmp = 10
daytmp   = 18
}
if (as.character(eltrcensus$plot[ii]) == "TRU-03") {
yeartmp  = 2011
monthtmp = 6
daytmp   = 27
}
if (as.character(eltrcensus$plot[ii]) == "TRU-04") {
yeartmp  = 2011
monthtmp = 7
daytmp   = 30
}
if (as.character(eltrcensus$plot[ii]) == "TRU-07") {
yeartmp  = 2011
monthtmp = 9
daytmp   = 1
}
if (as.character(eltrcensus$plot[ii]) == "TRU-08") {
yeartmp  = 2011
monthtmp = 9
daytmp   = 10
}
if (as.character(eltrcensus$plot[ii]) == "WAY-01") {
yeartmp  = 2011
monthtmp = 11
daytmp   = 24
}
yearDAP3  = c(yearDAP3,yeartmp)
monthDAP3 = c(monthDAP3,monthtmp)
dayDAP3   = c(dayDAP3,daytmp)
datesDAP3 = data.frame(yearDAP3, monthDAP3, dayDAP3)
datesDAP3 = data.frame(datesDAP3[1:7352,], eltrcensus$plot)
colnames(datesDAP3) <- c("year", "month", "day", "plot")
}
eltrcen1 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP_cm_start=eltrcensus$DAP_cm_start, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP1)
eltrcen2 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP=eltrcensus$DBH.2, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP2)
eltrcen3 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP=eltrcensus$DBH.3, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP3)
census <- rbind(eltrcen1, eltrcen2, eltrcen3)
head(eltrcen1)
head(eltrcen2)
head(eltrcen3)
eltrcensus   <- read.table("eltr_census_2011_clean_7July.csv", header=TRUE, sep=",", na.strings=c("NA", "NaN", ""), dec=".", strip.white=TRUE)
# add dates to eltrcensus
# 1st census
# eltrcensus <- eltrcensus[1:7352,] # this is to only use the rows that do not have NA at the end
yearDAP1   <- c()
monthDAP1  <- c()
dayDAP1    <- c()
for (ii in 1:(length(eltrcensus$plot))) {  #length(eltrcensus$plot) is equivalent to nrow(eltrcensus)
yeartmp  = NA
monthtmp = NA
daytmp   = NA
# cat("At row",i,"=",eltrcensus$plot[i]) this is to print the number of row and the value in that row
if (as.character(eltrcensus$plot[ii]) == "SPD-01") {
yeartmp  = 2006
monthtmp = 8
daytmp   = 30
}
if (as.character(eltrcensus$plot[ii]) == "SPD-02") {
yeartmp  = 2006
monthtmp = 9
daytmp   = 20
}
if (as.character(eltrcensus$plot[ii]) == "TRU-03") {
yeartmp  = 2003
monthtmp = 10
daytmp   = 3
}
if (as.character(eltrcensus$plot[ii]) == "TRU-04") {
yeartmp  = 2003
monthtmp = 7
daytmp   = 14
}
if (as.character(eltrcensus$plot[ii]) == "TRU-07") {
yeartmp  = 2003
monthtmp = 9
daytmp   = 3
}
if (as.character(eltrcensus$plot[ii]) == "TRU-08") {
yeartmp  = 2003
monthtmp = 8
daytmp   = 9
}
if (as.character(eltrcensus$plot[ii]) == "WAY-01") {
yeartmp  = 2003
monthtmp = 9
daytmp   = 24
}
yearDAP1  = c(yearDAP1,yeartmp)
monthDAP1 = c(monthDAP1,monthtmp)
dayDAP1   = c(dayDAP1,daytmp)
datesDAP1 = data.frame(yearDAP1, monthDAP1, dayDAP1)
datesDAP1 = data.frame(datesDAP1[1:7352,], eltrcensus$plot) # Make sure this is the right number of rows.
colnames(datesDAP1) <- c("year", "month", "day", "plot")
}
# 2nd census
yearDAP2   <- NULL   # same as yearDAP2 = c()
monthDAP2  <- NULL
dayDAP2    <- NULL
for (ii in 1:(length(eltrcensus$plot))) {  #length(eltrcensus$plot) is equivalent to nrow(eltrcensus)
yeartmp  = NA
monthtmp = NA
daytmp   = NA
# cat("At row",i,"=",eltrcensus$plot[i]) this is to print the number of row and the value in that row
if (as.character(eltrcensus$plot[ii]) == "SPD-01") {
yeartmp  = 2008
monthtmp = 9
daytmp   = 7
}
if (as.character(eltrcensus$plot[ii]) == "SPD-02") {
yeartmp  = 2008
monthtmp = 9
daytmp   = 12
}
if (as.character(eltrcensus$plot[ii]) == "TRU-03") {
yeartmp  = 2007
monthtmp = 5
daytmp   = 28
}
if (as.character(eltrcensus$plot[ii]) == "TRU-04") {
yeartmp  = 2007
monthtmp = 6
daytmp   = 8
}
if (as.character(eltrcensus$plot[ii]) == "TRU-07") {
yeartmp  = 2007
monthtmp = 6
daytmp   = 27
}
if (as.character(eltrcensus$plot[ii]) == "TRU-08") {
yeartmp  = 2007
monthtmp = 7
daytmp   = 2
}
if (as.character(eltrcensus$plot[ii]) == "WAY-01") {
yeartmp  = 2007
monthtmp = 7
daytmp   = 6
}
yearDAP2  = c(yearDAP2,yeartmp)
monthDAP2 = c(monthDAP2,monthtmp)
dayDAP2   = c(dayDAP2,daytmp)
datesDAP2 = data.frame(yearDAP2, monthDAP2, dayDAP2)
datesDAP2 = data.frame(datesDAP2[1:7352,], eltrcensus$plot)
colnames(datesDAP2) <- c("year", "month", "day", "plot")
}
# 3rd census
yearDAP3   <- NULL   # same as yearDAP2 = c()
monthDAP3  <- NULL
dayDAP3    <- NULL
for (ii in 1:(length(eltrcensus$plot))) {  #length(eltrcensus$plot) is equivalent to nrow(eltrcensus)
yeartmp  = NA
monthtmp = NA
daytmp   = NA
# cat("At row",i,"=",eltrcensus$plot[i]) this is to print the number of row and the value in that row
if (as.character(eltrcensus$plot[ii]) == "SPD-01") {
yeartmp  = 2011
monthtmp = 10
daytmp   = 23
}
if (as.character(eltrcensus$plot[ii]) == "SPD-02") {
yeartmp  = 2011
monthtmp = 10
daytmp   = 18
}
if (as.character(eltrcensus$plot[ii]) == "TRU-03") {
yeartmp  = 2011
monthtmp = 6
daytmp   = 27
}
if (as.character(eltrcensus$plot[ii]) == "TRU-04") {
yeartmp  = 2011
monthtmp = 7
daytmp   = 30
}
if (as.character(eltrcensus$plot[ii]) == "TRU-07") {
yeartmp  = 2011
monthtmp = 9
daytmp   = 1
}
if (as.character(eltrcensus$plot[ii]) == "TRU-08") {
yeartmp  = 2011
monthtmp = 9
daytmp   = 10
}
if (as.character(eltrcensus$plot[ii]) == "WAY-01") {
yeartmp  = 2011
monthtmp = 11
daytmp   = 24
}
yearDAP3  = c(yearDAP3,yeartmp)
monthDAP3 = c(monthDAP3,monthtmp)
dayDAP3   = c(dayDAP3,daytmp)
datesDAP3 = data.frame(yearDAP3, monthDAP3, dayDAP3)
datesDAP3 = data.frame(datesDAP3[1:7352,], eltrcensus$plot)
colnames(datesDAP3) <- c("year", "month", "day", "plot")
}
eltrcen1 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP=eltrcensus$DAP_cm_start, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP1)
eltrcen2 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP=eltrcensus$DBH.2, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP2)
eltrcen3 <- data.frame(plot=eltrcensus$plot, subplot=eltrcensus$subplot, tag=eltrcensus$tag, DAP=eltrcensus$DBH.3, altura_tot_est=eltrcensus$altura_tot_est, Densidade_de_madeira_g_cm3=eltrcensus$Densidade_de_madeira_g_cm3, datesDAP3)
census <- rbind(eltrcen1, eltrcen2, eltrcen3)
head(census)
write.csv(census, file="census_clean_2011_7July.csv")
census   <- read.table("census_clean_2011_7July.csv", header=TRUE, sep=",", na.strings=c("NA", "NaN", ""), dec=".", strip.white=TRUE)
census$X   <- NULL
head(census)
plotname="TRU-03"
census1_year=2003
census2_year=2007
allometric_option="Default"
height_correction_option="Default"
library(sqldf)
## Set of allometric equations after Chave et al. 2005 and Chave et al. 2014 are defined in allometricEquations.R. Options defined here:
if (allometric_option == 2 | allometric_option == "dry") {
allometrix <- 2
print("dry equation  is used for estimating AGB, model I.3 (see Chave et al., 2005)")
} else if (allometric_option == 3 | allometric_option == "moist" | allometric_option == "Default" | allometric_option == 1 | allometric_option == "moist_ped") {
allometrix <- 3
print("moist equation  is used for estimating AGB, model I.6 (see Chave et al., 2005)")
} else if (allometric_option == 4 | allometric_option == "wet") {
allometrix <- 4
print("wet equation  is used for estimating AGB, model I.3 (see Chave et al., 2005)")
} else if (allometric_option == 5 | allometric_option == "Chave2014") {
allometrix <- 5
print("pantropical equation is used for estimating AGB, model (4) (see Chave et al., 2014)")
} else {
print("Please specify a valid allometric_option!")
return()
}
cen <- subset(census, plot==plotname)
# rename columns
colnames(cen) <- c("plot", "sp", "tag", "dbh", "height", "density", "year", "month", "day", "plot_code")
cen$height[which(cen$height>120)] <- 120
cen$height[which(cen$height<2)]   <- 2
xdensity <- mean(cen$density, na.rm=T)
cen$density[which(is.na(cen$density)) | which(cen$density==0)] <- xdensity
## Height correction options
if (height_correction_option == 1 | height_correction_option == "Default" ) {
predheight <- 1
print("If you have height for more than 50 trees in your plot, estimate local diameter-height relationship. If not, choose height correction option 2.")
} else if (height_correction_option == 2) {
predheight <- 2
print("height correction estimated as described by Feldpauch et al. (2012). Please check Feldpauch regional parameters in the code. Default is Brazilian shield.")
} else {
print("Please specify a valid height_correction_option!")
return()
}
# dates option
if (census1_year == "Default" ) {
census1_year <- min(census$year)
print("Using first and last years of the dataset as census interval. Please precify census1_year and census2_year.")
}
if (census2_year == "Default" ) {
census2_year <- max(census$year)
print("Using first and last years of the dataset as census interval.")
}
# Ken Feeley's code uses log & exp. just check we don't need to use log and exp for local height estimate.
#h.est=function(dbh, h){
#  d=log(as.numeric(as.character(dbh))) # why does he have log here?
#  h=log(as.numeric(as.character(h)))
#  l=lm(h~d)
#  pred.h=l[[1]][1]+l[[1]][2]*d
#  pred.h=exp(pred.h)                   # and exp here?
#}
# missing height function
h.est=function(dbh, h){
l      =lm(h~dbh)
coeffs = coefficients(l)
pred.h = coeffs[1] + coeffs[2]*dbh
}
# Option 2: you have height for less than 50 trees in your plot. Use Fedpauch equation.
#ADD PARAMETER: Feldpauch region.
## Feldpauch correction procedure for heights, diameters and densitys:
# Brazilian shield
Bo    = 0.6373
B1    = 0.4647  # E.C. Amazonia
So1   = 0.012  # E.C. Amazonia
Abar  = 20.4  # mean cenetered basal area m-2 ha-1
n01   = 0.0034 # E.C. Amazonia
Pvbar = 0.68 # mean centered precipitation coefficient of variation
n02   = -0.0449 # E.C. Amazonia
Sdbar = 5     # mean centered dry season length no months less than 100mm
n03   = 0.0191  # E.C. Amazonia
Tabar = 25.0  # mean centered annual averge temperature
# Define height options
if (predheight == 1) {
w <- which(is.na(cen$height))
h.pred <- h.est(cen$dbh, cen$height)
cen$height[w] <- h.pred[w]
} else if (predheight == 2) {
w <- which(is.na(cen$height))
cen$height[w] <- 10^(Bo + B1*log10(cen$dbh[w]/10) + Abar*So1 + n01*Pvbar + n02*Sdbar + n03*Tabar)
}
er = 0.1 # .1cm sampling error is trivial compared to systematic error of allometric equation. Change this see Chave et al. 2005.
## loop through each tree to estimate biomass (bm) and convert to above ground carbon (agC)
for (ii in 1:length(cen$tag)) {
thistree <- which(cen$tag == cen$tag[ii] & cen$year == cen$year[ii])
dbh_tree <- cen$dbh[thistree]
den_tree <- cen$density[thistree]
h_tree   <- cen$height[thistree]
# this uses allometric equations from allometricEquations.R
if (allometrix == 2) {
bm <- Chave2005_dry(diax=dbh_tree, density=den_tree, height=h_tree)
} else if (allometrix == 3) {
bm <- Chave2005_moist(diax=dbh_tree, density=den_tree, height=h_tree)
} else if (allometrix == 4) {
bm <- Chave2005_wet(diax=dbh_tree, density=den_tree, height=h_tree)
} else if (allometrix == 5) {
bm <- Chave2014(diax=dbh_tree, density=den_tree, height=h_tree)
}
cen$agC[ii] <- (bm)*(1/(2.1097*1000)) # convert kg to Mg=1/1000=10 and convert to carbon = 47.8%
}
cen$date <- as.Date(paste(cen$year, cen$month, cen$day, sep="."), format="%Y.%m.%d")
for (i in 1:length(cen$tag)) {
min_date <- as.character(min(cen$date))
max_date <- as.character(max(cen$date))
}
agC_mydates     <- subset(cen, cen$year == census1_year & cen$year == census2_year, select = c(plot, tag, year, month, day, agC))
head(agC_mydates)
agC_mydates     <- subset(cen, (cen$year == census1_year & cen$year == census2_year), select = c(plot, tag, year, month, day, agC))
agC_mydates
census1_year=2003
census2_year=2003
agC_mydates     <- subset(cen, cen$year == census1_year & cen$year == census2_year, select = c(plot, tag, year, month, day, agC))
agC_mydates
census1_year=2003
census2_year=2007
agC_mydates     <- subset(cen, cen$year == census1_year | cen$year == census2_year, select = c(plot, tag, year, month, day, agC))
head(agC_mydates)
tail(agC_mydates)
for (i in 1:length(agC_mydates$tag)) {
min_date <- as.character(min(agC_mydates$date))
max_date <- as.character(max(agC_mydates$date))
}
warnings()
agC_mydates     <- subset(cen, cen$year == census1_year | cen$year == census2_year, select = c(plot, tag, year, month, day, date, agC))
for (i in 1:length(agC_mydates$tag)) {
min_date <- as.character(min(agC_mydates$date))
max_date <- as.character(max(agC_mydates$date))
}
min_date
max_date
start_date <- as.Date(format(min(strptime(min_date, format="%Y-%m-%d"))))
end_date   <- as.Date(format(max(strptime(max_date, format="%Y-%m-%d"))))
census_interval <- as.numeric(difftime(end_date, start_date, units="days"))
census_interval
agC_1     <- subset(cen, cen$year == census1_year, select = c(plot, tag, year, month, day, agC))
agC_2     <- subset(cen, cen$year == census2_year, select = c(plot, tag, year, month, day, agC))
agC_1$uid <- paste(agC_1$tag, agC_1$year, agC_1$month, agC_1$day, sep=".")
agC_2$uid <- paste(agC_1$tag, agC_1$year, agC_1$month, agC_1$day, sep=".")
npp       <- sqldf("SELECT agC_1.plot, agC_1.tag, agC_1.year, agC_1.month, agC_1.agC , agC_2.agC FROM agC_1 JOIN agC_2 ON agC_1.uid = agC_2.uid")
colnames(npp) <- c("plot", "tag", "year", "month", "agC.1", "agC.2")
npp_day   <- (npp$agC.2-npp$agC.1) / census_interval
NPPacw_MgC_ha_yr <- (sum(npp_day, na.rm=T))*365
NPPacw_MgC_ha_yr
NPPcorr = NPPacw_MgC_ha_yr + (0.0091 * NPPacw_MgC_ha_yr) * (census_interval/365)
NPPcorr
setwd("C:/Users/Cecile/Documents/GitHub/GEMcarbon.R")
dir()
source("largeTreeNPP_census_v2_function.R")
source("largetreebiomass_census.R")
source("allometricEquations.R")
tru3 <- NPPacw_census(census, plotname=3, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru4 <- NPPacw_census(census, plotname=4, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru7 <- NPPacw_census(census, plotname=5, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru8 <- NPPacw_census(census, plotname=6, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
way1 <- NPPacw_census(census, plotname=7, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
spd1 <- NPPacw_census(census, plotname=1, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2008)
spd2 <- NPPacw_census(census, plotname=2, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2008)
tru3 <- NPPacw_census(census, plotname=3, allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru3 <- NPPacw_census(census, plotname="TRU-03", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru3
tru3 <- NPPacw_census(census, plotname="TRU-03", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru4 <- NPPacw_census(census, plotname="TRU-04", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru7 <- NPPacw_census(census, plotname="TRU-07", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru8 <- NPPacw_census(census, plotname="TRU-08", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
way1 <- NPPacw_census(census, plotname="WAY-01", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
spd1 <- NPPacw_census(census, plotname="SPD-01", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2008)
spd2 <- NPPacw_census(census, plotname="SPD-02", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2008)
npp_ch05 <- c(tru3, tru4, tru7, tru8, way1)
# try with chave 2014
plot <- c("TRU-03", "TRU-04", "TRU-07", "TRU-08", "WAY-01") #, "SPD-01", "SPD-02"
plotnpp <- data.frame(npp_ch05, plot)
plotnpp
unique(census$plot)
tru3 <- NPPacw_census(census, plotname="TRU-03", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru4 <- NPPacw_census(census, plotname="TRU-04", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru7 <- NPPacw_census(census, plotname="TRU-07", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
tru8 <- NPPacw_census(census, plotname="TRU-08", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
way1 <- NPPacw_census(census, plotname="WAY-01", allometric_option="Default", height_correction_option="Default", census1_year=2003, census2_year=2007)
spd1 <- NPPacw_census(census, plotname="SPD-01", allometric_option="Default", height_correction_option="Default", census1_year=2006, census2_year=2008)
spd2 <- NPPacw_census(census, plotname="SPD-02", allometric_option="Default", height_correction_option="Default", census1_year=2006, census2_year=2008)
npp_ch05 <- c(tru3, tru4, tru7, tru8, way1, spd1, spd2)
# try with chave 2014
plot <- c("TRU-03", "TRU-04", "TRU-07", "TRU-08", "WAY-01", "SPD-01", "SPD-02")
plotnpp <- data.frame(npp_ch05, plot)
# Chave 2014
14tru3 <- NPPacw_census(census, plotname="TRU-03", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
14tru4 <- NPPacw_census(census, plotname="TRU-04", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
14tru7 <- NPPacw_census(census, plotname="TRU-07", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
14tru8 <- NPPacw_census(census, plotname="TRU-08", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
14way1 <- NPPacw_census(census, plotname="WAY-01", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
14spd1 <- NPPacw_census(census, plotname="SPD-01", allometric_option=5, height_correction_option="Default", census1_year=2006, census2_year=2008)
14spd2 <- NPPacw_census(census, plotname="SPD-02", allometric_option=5, height_correction_option="Default", census1_year=2006, census2_year=2008)
# Chave 2014
tru3_14 <- NPPacw_census(census, plotname="TRU-03", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
tru4_14 <- NPPacw_census(census, plotname="TRU-04", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
tru7_14 <- NPPacw_census(census, plotname="TRU-07", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
tru8_14 <- NPPacw_census(census, plotname="TRU-08", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
way1_14 <- NPPacw_census(census, plotname="WAY-01", allometric_option=5, height_correction_option="Default", census1_year=2003, census2_year=2007)
spd1_14 <- NPPacw_census(census, plotname="SPD-01", allometric_option=5, height_correction_option="Default", census1_year=2006, census2_year=2008)
spd2_14 <- NPPacw_census(census, plotname="SPD-02", allometric_option=5, height_correction_option="Default", census1_year=2006, census2_year=2008)
# annual NPPacw - estimate SE
npp_ch05 <- c(tru3, tru4, tru7, tru8, way1, spd1, spd2)
npp_ch14 <- c(tru3_14, tru4_14, tru7_14, tru8_14, way1_14, spd1_14, spd2_14)
plot <- c("TRU-03", "TRU-04", "TRU-07", "TRU-08", "WAY-01", "SPD-01", "SPD-02")
plotnpp <- data.frame(npp_ch05, npp_ch14, plot)
yrnpp <- ggplot(data=plotnpp, aes(x=plot, y=npp_ch05, na.rm=T)) +
geom_point()+
geom_point(data=plotnpp, aes(x=plot, y=npp_ch14, na.rm=T), colour='red') +
ylim(0,3) +
xlab("") + ylab(expression(paste("NPP (Mg C ha", yr^-1, ")", sep=""))) +
theme_classic(base_size = 15, base_family = "") + theme(legend.position="top") +
theme(legend.title=element_blank()) + theme(legend.key = element_blank())
yrnpp
plotnpp
plotname="SPD-02"
# load libraries
library(sqldf)
## Set of allometric equations after Chave et al. 2005 and Chave et al. 2014 are defined in allometricEquations.R. Options defined here:
if (allometric_option == 2 | allometric_option == "dry") {
allometrix <- 2
print("dry equation  is used for estimating AGB, model I.3 (see Chave et al., 2005)")
} else if (allometric_option == 3 | allometric_option == "moist" | allometric_option == "Default" | allometric_option == 1 | allometric_option == "moist_ped") {
allometrix <- 3
print("moist equation  is used for estimating AGB, model I.6 (see Chave et al., 2005)")
} else if (allometric_option == 4 | allometric_option == "wet") {
allometrix <- 4
print("wet equation  is used for estimating AGB, model I.3 (see Chave et al., 2005)")
} else if (allometric_option == 5 | allometric_option == "Chave2014") {
allometrix <- 5
print("pantropical equation is used for estimating AGB, model (4) (see Chave et al., 2014)")
} else {
print("Please specify a valid allometric_option!")
return()
}
